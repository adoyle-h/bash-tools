#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
shopt -s inherit_errexit
[[ -n "${VERBOSE:+x}" ]] && set -o verbose
[[ -n "${DEBUG:-}" ]] && IS_DEBUG=true || IS_DEBUG=false

readonly SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"

# shellcheck source=./src/load_internals.bash
source "$SCRIPT_DIR/src/load_internals.bash"
_lobash.imports ask

is_valid_lobash_prefix() {
  local prefix=$1

  [[ ${prefix%%.}. == "$prefix" ]] && return 0
  [[ ${prefix%%-}- == "$prefix" ]] && return 0
  [[ ${prefix%%_}_ == "$prefix" ]] && return 0

  return 1
}

init() {
  _lobash.check_shell
  _lobash.check_os

  if [[ -z ${1:-} ]]; then
    TARGET=$SCRIPT_DIR/dist/lobash.bash
  else
    if [[ -d $1 ]]; then
      TARGET=${1}/lobash.bash
    else
      TARGET=${1}
    fi
  fi

  mkdir -p "$(dirname "$TARGET")"

  PREFIX=${PREFIX:-l.}

  if ! is_valid_lobash_prefix "$PREFIX"; then
    echo "Invalid PREFIX=\"$PREFIX\". PREFIX must end with one of '_', '-', '.'" >&2
    return 4
  fi

  VERSION=$(cat "$SCRIPT_DIR/version")
  # LOBASH_POUCH_TIME must never change
  LOBASH_POUCH_TIME=1561389473

  UNIQ_KEY=${VERSION//[^[:alnum:]]/_}_$(( $(date '+%s') - LOBASH_POUCH_TIME ))_$RANDOM
}

safe_rm() {
  local path=$1
  if [[ $path == / ]]; then
    echo "Dangerous! Do not rm $path"
    return 3
  fi

  if [[ $(dirname "$path") == / ]]; then
    echo "Dangerous! Do not rm $path"
    return 3
  fi

  rm -rf "$path"
}

clean() {
  if [[ -f $TARGET ]]; then
    local answer
    answer=$(l.ask "Existed file: ${TARGET}. Overwrite it?" N)
    echo "$answer"
    case $answer in
      YES )
        ;;
      * )
        echo "Not overwrite it. No color file will be generated."
        exit 0
        ;;
    esac
  fi

  safe_rm "$TARGET"
}

write() {
  printf -- '%s\n' "$*" >> "$TARGET"
}

fwrite() {
  write ''

  local prefixes="${_LOBASH_INTERNAL_FUNC_PREFIX}|${_LOBASH_INTERNAL_CONST_PREFIX}|${_LOBASH_PRIVATE_FUNC_PREFIX}|${_LOBASH_PRIVATE_CONST_PREFIX}|${_LOBASH_PUBLIC_FUNC_PREFIX}"
  prefixes=${prefixes//\./\\.}

  local word_boundary
  if [[ $_LOBASH_OS == 'Linux' ]]; then
    word_boundary='\b'
  elif [[ $_LOBASH_OS == 'MacOS' ]]; then
    word_boundary='[[:<:]]'
  else
    echo "Unexpected _LOBASH_OS=$_LOBASH_OS" >&2
  fi

  local public_const_prefix=${PREFIX//[^[:alnum:]]/_}
  public_const_prefix=${public_const_prefix^^}

  <"$1" \
    sed -E "s/${word_boundary}($prefixes)([_a-zA-Z0-9]+)/\\1${UNIQ_KEY}_\\2/g" \
    | sed -E "s/${word_boundary}${_LOBASH_PUBLIC_CONST_PREFIX}([_a-zA-Z0-9]+)/${public_const_prefix}\\1/g" \
    >> "$TARGET"
}

generate() {
  write '# This file is generated by https://github.com/adoyle-h/lobash'
  write '# Author: ADoyle <adoyle.h@gmail.com>'
  write '# License: Apache License Version 2.0'
  write "# Version: $VERSION"
  write "# Prefix: $PREFIX"

  readarray -t modules < <(find "$SCRIPT_DIR"/src/modules/ -type f -name "*.bash" -exec basename {} .bash \;)

  write ''
  write '######################## Lobash Internals ########################'

  # shellcheck source=./src/basic_internals.bash
  source "$SCRIPT_DIR"/src/basic_internals.bash

  for name in "${_LOBASH_BASIC_INTERNALS[@]}"; do
    fwrite "$SCRIPT_DIR/src/internals/$name.bash"
  done
  write "_LOBASH_${UNIQ_KEY}_PREFIX=$PREFIX"

  write ''
  write '######################## Private Methods ########################'

  for path in "$SCRIPT_DIR"/src/modules/*.bash; do
    fwrite "$path"
  done

  write ''
  write '######################## Public Methods ########################'

  for module in "${modules[@]}"; do
    write "$PREFIX$module() { l.${UNIQ_KEY}_$module \"\$@\"; }"
  done

  echo "Generated lobash file: $TARGET"
}

main() {
  init "$@"
  clean
  generate "$@"
}

main "$@"
