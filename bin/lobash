#!/usr/bin/env bash
#
# Filename:
# Description:
# Author: ADoyle <adoyle.h@gmail.com>
# LICENSE: Apache License, Version 2.0
# Bash Version: 3.x and higher

set -o errexit
set -o nounset
set -o pipefail
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit
[[ -n "${VERBOSE:+x}" ]] && set -o verbose
[[ -n "${DEBUG:-}" ]] && IS_DEBUG=true || IS_DEBUG=false

readonly SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"

#######################################################################
#                           initialization                            #
#######################################################################

source "$SCRIPT_DIR/../tools/colors.bash"
# shellcheck source=../src/load_internals.bash
source "$SCRIPT_DIR/../src/load_internals.bash"

usage() {
  local str
  # read return error with here-doc, so close errexit
  set +o errexit
  read -r -d '' str <<EOF
${GREEN}Usage:${RESET_ALL}
  lobash [help|-h|--help]
  lobash mod <module_name> [<sub_command_args>]...
  lobash meta

${PURPLE}Sub-Command:${RESET_ALL}
  help       Show help
  mod        Invoke a Lobash module
  mods       Show available module names
  meta       Query metadatas of Lobash module
  github     Open Lobash github page in your browser

${CYAN}Description:${RESET_ALL}
The "lobash mod" command is only used for certain scenarios. Many modules not work as command.
EOF
  set -o errexit

  printf '%b\n' "$str"
}


declare -A dispatch_cmd_opts
declare -a dispatch_cmd_args

opt_parse() {
  while [ $# -gt 0 ];do
    case $1 in
      -h)
        dispatch_cmd_opts[help]=true
        ;;
      --help)
        dispatch_cmd_opts[help]=true
        ;;
      *)
        dispatch_cmd_args+=("$1")
        ;;
    esac
    shift
  done

  # declare -p dispatch_cmd_opts
}

#######################################################################
#                           private methods                           #
#######################################################################

exec_module() {
  local module=$1
  _lobash.imports "$module"
  shift
  "l.$module" "$@"
}

query_meta() {
  _lobash.import_internals module_meta

  local module=$1
  local meta_types=(
    Module
    Category
    Since
    Usage
    Description
    Dependent
    Deprecated
    Bash
    Status
  )
  _lobash.scan_module_metadata "$module"

  for mtype in "${meta_types[@]}"; do
    printf '%b: %b\n' "${GREEN}$mtype${RESET_ALL}" "$(_lobash.get_module_metadata "$module" "$mtype")"
  done
}

open_github() {
  open https://github.com/adoyle-h/lobash
}

show_mods() {
  find "$SCRIPT_DIR/../src/modules/" -type f -exec basename {} .bash \; | sort
}

init() {
  _lobash.imports trace_start trace_end
}

#######################################################################
#                           public methods                            #
#######################################################################

main() {
  opt_parse "$@"
  local arg0=${dispatch_cmd_args[0]:-}

  if [[ ${dispatch_cmd_opts[help]:-} == true ]] || [[ -z "$arg0" ]]; then
    usage
    exit 0
  fi

  init

  case $arg0 in
    mod ) exec_module "${dispatch_cmd_args[@]:1}" ;;
    mods ) show_mods ;;
    meta ) query_meta "${dispatch_cmd_args[@]:1}" ;;
    help ) usage ;;
    github ) open_github ;;
  esac
}

main "$@"
