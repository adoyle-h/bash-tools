#!/usr/bin/env bash
# shellcheck disable=SC1090

set -o errexit
set -o nounset
set -o pipefail
[[ -n "${XTRACE:+x}" ]] && set -o xtrace
[[ -n "${VERBOSE:+x}" ]] && set -o verbose
[[ -n "${DEBUG:-}" ]] && IS_DEBUG=true || IS_DEBUG=false
[[ $- =~ [x] ]] && PS4='+[${BASH_SOURCE}:${LINENO}:${FUNCNAME[0]:+${FUNCNAME[0]}}()]: '

readonly SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"

source "$SCRIPT_DIR"/../src/module_meta.bash

safe_rm() {
  local path=$1
  if [[ $path == / ]]; then
    echo "Dangerous! Do not rm $path"
    return 2
  fi

  if [[ $(dirname "$path") == / ]]; then
    echo "Dangerous! Do not rm $path"
    return 2
  fi

  rm -rf "$path"
}

lower_case() {
  read -r str
  printf '%s\n' "${str,,}"
}

main() {
  local CATE_DIR=$SCRIPT_DIR/../src/internals/categories
  safe_rm "$CATE_DIR"
  mkdir "$CATE_DIR"
  local filename category filepath
  for filepath in $SCRIPT_DIR/../src/modules/*.bash; do
    # printf '\n[%s]\n' "$(basename "$filepath" .bash)"
    filename=$(basename "$filepath" .bash)
    category=$(_get_module_metadata_str "$filepath" | grep -Eo '^Category: \w+$' | sed 's/Category: //' | lower_case || echo '')

    if [[ -n $category ]]; then
      printf '%s ' "$filename" >> "$CATE_DIR/$category"
    fi
  done

  local file
  for file in "$CATE_DIR"/* ; do
    printf '\n' >> "$file"
  done
}

main "$@"
